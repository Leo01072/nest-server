// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
// prisma/schema.prisma

// 连接数据库的配置
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}
// datasource db {
//   provider = "postgresql" // 数据库类型是 PostgreSQL
//   url      = env("POSTGRES_PRISMA_URL") // 数据库连接URL，配置在 .env 文件中
// }

// 用户表 (users)
model User {
  user_id      Int      @id @default(autoincrement()) // 用户ID，主键，自动递增
  username     String   @unique
  full_name    String?
  email        String   @unique
  phone_number String?
  created_at   DateTime @default(now())

  authTokens  AuthToken[] // 用户和认证令牌的关系
  workReports WorkReport[] // 用户和工作日报的关系
  dailyBills  DailyBill[] // 用户和每日账单的关系
  fuelLogs    FuelLog[] // 用户和加油记录的关系
  posts Post[]
}

// 用户认证令牌表 (auth_tokens)
model AuthToken {
  token_id   Int      @id @default(autoincrement()) // 令牌ID，主键，自动递增
  user_id    Int // 关联用户ID
  token      String // 认证令牌
  expires_at DateTime
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user User @relation(fields: [user_id], references: [user_id]) // 外键关系
}

// 字典表 (labels)
model Label {
  label_id           Int      @id @default(autoincrement()) // 标签ID，主键，自动递增
  label_type         String // 标签类别
  label_value        String // 标签值
  label_display_name String // 标签显示名称
  created_at         DateTime @default(now())

  dailyBills  DailyBill[] // 与每日账单的关系
  workReports WorkReport[] // 与工作日报的关系
}

// 工作日报表 (work_reports)
model WorkReport {
  report_id    Int      @id @default(autoincrement()) // 日报ID，主键，自动递增
  user_id      Int // 关联用户ID
  report_date  DateTime
  task_type_id Int // 任务类型，关联标签
  work_hours   Float // 工作时长
  notes        String?
  created_at   DateTime @default(now())

  user     User  @relation(fields: [user_id], references: [user_id]) // 外键关系
  taskType Label @relation(fields: [task_type_id], references: [label_id]) // 外键关系，任务类型
}

// 每日账单表 (daily_bills)
model DailyBill {
  bill_id     Int      @id @default(autoincrement()) // 账单ID，主键，自动递增
  user_id     Int // 关联用户ID
  bill_date   DateTime
  amount      Float // 金额
  category_id Int // 账单分类，关联标签
  description String?
  created_at  DateTime @default(now())

  user     User  @relation(fields: [user_id], references: [user_id]) // 外键关系
  category Label @relation(fields: [category_id], references: [label_id]) // 外键关系，账单分类
}

// 加油信息表 (fuel_logs)
model FuelLog {
  fuel_id          Int      @id @default(autoincrement()) // 加油记录ID，主键，自动递增
  user_id          Int // 关联用户ID
  fuel_date        DateTime
  fuel_amount      Float // 加油量
  fuel_cost        Float // 加油金额
  odometer_reading Float // 里程表读数
  notes            String?
  created_at       DateTime @default(now())

  user User @relation(fields: [user_id], references: [user_id]) // 外键关系
}

model Post {
  id        Int      @default(autoincrement()) @id
  title     String
  content   String?
  published Boolean? @default(false)
  author    User?    @relation(fields: [authorId], references: [user_id])
  authorId  Int?
}